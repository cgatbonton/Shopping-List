{"mappings":"AAAA,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,iEAAiE;AAEjE,0BAA0B;AAE1B,IAAI,QAAQ,EAAE;AAEd,SAAS,aAAa,CAAC,EAAE;IACvB,EAAE,cAAc;IAChB,MAAM,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,KAAK;IACvC,uBAAuB;IACvB,IAAI,SAAS,IAAI;QACf,MAAM,OAAO;YACX,MAAM;YACN,IAAI,KAAK,GAAG;YACZ,UAAU,KAAK;QACjB;QAEA,gCAAgC;QAChC,MAAM,IAAI,CAAC;QACX,EAAE,MAAM,CAAC,KAAK;QACd,sFAAsF;QACtF,KAAK,aAAa,CAAC,IAAI,YAAY;IACrC,CAAC;AACH;AAEA,SAAS,eAAe;IACtB,MAAM,OAAO,MACV,GAAG,CACF,CAAC,OAAS,CAAC;;OAEV,EAAE,KAAK,EAAE,CAAC;AACjB,EAAE,KAAK,QAAQ,GAAG,YAAY,EAAE,CAAC;;uBAEV,EAAE,KAAK,IAAI,CAAC;;mBAEhB,EAAE,KAAK,IAAI,CAAC;OACxB,EAAE,KAAK,EAAE,CAAC;;OAEV,CAAC,EAEH,IAAI,CAAC;IACR,KAAK,SAAS,GAAG;AACnB;AAEA,SAAS,uBAAuB;IAC9B,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;IAC7C,QAAQ,IAAI,CAAC;AACf;AAEA,SAAS,0BAA0B;IACjC,QAAQ,IAAI,CAAC;IACb,yBAAyB;IACzB,MAAM,UAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;IAChD,IAAI,QAAQ,MAAM,EAAE;QAClB,+CAA+C;QAC/C,MAAM,IAAI,IAAI;QACd,KAAK,aAAa,CAAC,IAAI,YAAY;IACrC,CAAC;AACH;AAEA,SAAS,WAAW,EAAE,EAAE;IACtB,2DAA2D;IAC3D,qCAAqC;IACrC,QAAQ,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;IAC3C,KAAK,aAAa,CAAC,IAAI,YAAY;AACrC;AAEA,SAAS,eAAe,EAAE,EAAE;IAC1B,MAAM,UAAU,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;IACjD,QAAQ,QAAQ,GAAG,CAAC,QAAQ,QAAQ;IACpC,KAAK,aAAa,CAAC,IAAI,YAAY;AACrC;AAEA,aAAa,gBAAgB,CAAC,UAAU;AACxC,KAAK,gBAAgB,CAAC,gBAAgB;AACtC,KAAK,gBAAgB,CAAC,gBAAgB;AACtC,KAAK,gBAAgB,CAAC,SAAS,SAAU,CAAC,EAAE;IAC1C,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,WACnB,WAAW,SAAS,EAAE,MAAM,CAAC,KAAK;IAEpC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,2BACnB,eAAe,SAAS,EAAE,MAAM,CAAC,KAAK;AAE1C;AACA;AAEA,MAAM,UAAU;IAAC;IAAG;CAAE;AACtB,MAAM,cAAc;AACpB,6CAA6C;AAC7C,YAAY,IAAI,CAAC;AACjB,0BAA0B;AAC1B,QAAQ,GAAG,CAAC,SAAS,cAErB,iDAAiD;CACjD,oBAAoB;CACpB,MAAM","sources":["exercises/57 - Shopping List/shopping.js"],"sourcesContent":["const shoppingForm = document.querySelector('.shopping');\nconst list = document.querySelector('.list');\n// const buttons = document.querySelectorAll('[class=\"button\"]');\n\n// Array to hold our state\n\nlet items = [];\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const name = e.currentTarget.item.value;\n  // or if(!name) return;\n  if (name !== '') {\n    const item = {\n      name: name,\n      id: Date.now(),\n      complete: false,\n    };\n\n    // Push the items into our state\n    items.push(item);\n    e.target.reset();\n    // fire off a custom event that will tell anyone else that the items have been updated\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n  }\n}\n\nfunction displayItems() {\n  const html = items\n    .map(\n      (item) => `<li class=\"shopping-item\">\n<input type=\"checkbox\" \nvalue=\"${item.id}\"\n${item.complete ? 'checked' : ''}\n>\n<span class=\"itemName\">${item.name}</span>\n<button \naria-label=\"Remove ${item.name}\"\nvalue=\"${item.id}\"\n>&times;</button>\n  </li>`\n    )\n    .join('');\n  list.innerHTML = html;\n}\n\nfunction mirrorToLocalStorage() {\n  localStorage.setItem('items', JSON.stringify(items));\n  console.info('Saving items to local storage');\n}\n\nfunction restoreFromLocalStorage() {\n  console.info('Restoring from LS');\n  // pull the items from LS\n  const lsItems = JSON.parse(localStorage.getItem('items'));\n  if (lsItems.length) {\n    // lsItems.forEach((item) => items.push(item));\n    items.push(...lsItems);\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n  }\n}\n\nfunction deleteItem(id) {\n  // const newItems = items.filter((item) => item.id === id);\n  // console.log('newItems', newItems);\n  items = items.filter((item) => item.id !== id);\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nfunction markAsComplete(id) {\n  const itemRef = items.find((item) => item.id === id);\n  itemRef.complete = !itemRef.complete;\n  list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nshoppingForm.addEventListener('submit', handleSubmit);\nlist.addEventListener('itemsUpdated', displayItems);\nlist.addEventListener('itemsUpdated', mirrorToLocalStorage);\nlist.addEventListener('click', function (e) {\n  if (e.target.matches('button')) {\n    deleteItem(parseInt(e.target.value));\n  }\n  if (e.target.matches('input[type=\"checkbox\"]')) {\n    markAsComplete(parseInt(e.target.value));\n  }\n});\nrestoreFromLocalStorage();\n\nconst numbers = [1, 2];\nconst numbersCopy = numbers;\n// const numbersCopy = numbers.map((x) => x);\nnumbersCopy.push(4);\n// numbersCopy[0].push(4);\nconsole.log(numbers, numbersCopy);\n\n// list.addEventListener('itemsUpdated', (e) => {\n//   console.log(e);\n// });\n"],"names":[],"version":3,"file":"index.f5eee5a3.js.map","sourceRoot":"/__parcel_source_root/"}